// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shoppinho.Lojas.Api.Infra.Contexts;

#nullable disable

namespace Shoppinho.Lojas.Api.Migrations
{
    [DbContext(typeof(LojaContext))]
    partial class LojaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Shoppinho.Lojas.Api.Dominio.Entidades.Loja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("varchar(9)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.Property<DateTimeOffset>("UltimaAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Lojas", (string)null);
                });

            modelBuilder.Entity("Shoppinho.Sdk.Core.ObjValores.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("LojaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("Shoppinho.Sdk.Core.ObjValores.Telefone", b =>
                {
                    b.Property<string>("CodigoPais")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("DDD")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("LojaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Whatsapp")
                        .HasColumnType("bit");

                    b.HasKey("CodigoPais", "DDD", "Numero");

                    b.HasIndex("LojaId");

                    b.ToTable("Telefones", (string)null);
                });

            modelBuilder.Entity("Shoppinho.Lojas.Api.Dominio.Entidades.Loja", b =>
                {
                    b.OwnsOne("Shoppinho.Sdk.Core.ObjValores.Cnpj", "CNPJ", b1 =>
                        {
                            b1.Property<Guid>("LojaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("varchar(14)")
                                .HasColumnName("CNPJ");

                            b1.HasKey("LojaId");

                            b1.ToTable("Lojas");

                            b1.WithOwner()
                                .HasForeignKey("LojaId");
                        });

                    b.Navigation("CNPJ")
                        .IsRequired();
                });

            modelBuilder.Entity("Shoppinho.Sdk.Core.ObjValores.Endereco", b =>
                {
                    b.HasOne("Shoppinho.Lojas.Api.Dominio.Entidades.Loja", null)
                        .WithMany("Enderecos")
                        .HasForeignKey("LojaId");

                    b.OwnsOne("Shoppinho.Sdk.Core.ObjValores.Cidade", "Cidade", b1 =>
                        {
                            b1.Property<Guid>("EnderecoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("varchar(2)")
                                .HasColumnName("Estado");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasColumnType("varchar(80)")
                                .HasColumnName("Cidade");

                            b1.HasKey("EnderecoId");

                            b1.ToTable("Enderecos");

                            b1.WithOwner()
                                .HasForeignKey("EnderecoId");
                        });

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Shoppinho.Sdk.Core.ObjValores.Telefone", b =>
                {
                    b.HasOne("Shoppinho.Lojas.Api.Dominio.Entidades.Loja", null)
                        .WithMany("Telefones")
                        .HasForeignKey("LojaId");
                });

            modelBuilder.Entity("Shoppinho.Lojas.Api.Dominio.Entidades.Loja", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
